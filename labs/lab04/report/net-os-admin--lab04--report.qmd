---
  title: "Лабораторная работа №4"
  author: "Газизянов Владислав Альбертович"
  subtitle: "Базовая настройка HTTP-сервера Apache"
  license: "CC BY"
---

# Цель работы

Приобретение практических навыков по установке и базовому конфигурированию HTTP-сервера Apache.

# Задание

1. Установить необходимые для работы HTTP-сервера пакеты.
2. Запустить HTTP-сервер с базовой конфигурацией и проанализировать его работу.
3. Настроить виртуальный хостинг.
4. Написать скрипт для Vagrant, фиксирующий действия по установке и настройке HTTP-сервера.

# Выполнение лабораторной работы

## Установка HTTP-сервера

Была запущена виртуальная машина server и выполнена установка пакетов, необходимых для функционирования веб-сервера, включая основной HTTP-сервер и сопутствующие утилиты.

![Запуск виртуальной машины server](image/Screenshot_1.png)

![Установка пакетов веб-сервера](image/Screenshot_2.png)

## Базовое конфигурирование HTTP-сервера

Проведён анализ содержимого конфигурационных файлов Apache в стандартных каталогах.

В настройках межсетевого экрана добавлено разрешение для HTTP-трафика.

![Настройка firewall для HTTP](image/Screenshot_3.png)

Сервер был активирован и запущен, после чего проверена его корректная работа через системные логи.

![Запуск и активация httpd](image/Screenshot_4.png)

![Проверка логов системы](image/Screenshot_5.png)

## Анализ работы HTTP-сервера

Запущена виртуальная машина client.

![Запуск виртуальной машины client](image/Screenshot_6.png)

На сервере начато наблюдение за логами доступа и ошибок веб-сервера.

![Мониторинг логов доступа](image/Screenshot_7.png)

С клиентской машины выполнено обращение к серверу через веб-браузер, что позволило зафиксировать соответствующую активность в логах и подтвердить базовую работоспособность сервиса.

![Обращение к серверу через браузер](image/Screenshot_8.png)

## Настройка виртуального хостинга

В DNS-сервер добавлены записи для двух виртуальных хостов.

![Добавление DNS-записей](image/Screenshot_9.png)

Созданы отдельные конфигурационные файлы для каждого хоста в каталоге дополнительных настроек Apache.

![Создание конфигов виртуальных хостов](image/Screenshot_10.png)

Для каждого виртуального хоста созданы корневые каталоги с тестовыми HTML-страницами.

![Создание каталогов и тестовых страниц](image/Screenshot_11.png)

Настроены соответствующие права доступа к файлам и восстановлены контексты безопасности SELinux.

![Настройка прав доступа](image/Screenshot_12.png)

После применения изменений сервер был перезапущен.

![Перезапуск HTTP-сервера](image/Screenshot_13.png)

Проверена доступность виртуальных хостов с клиентской машины.

![Проверка виртуальных хостов](image/Screenshot_14.png)

## Внесение изменений в настройки внутреннего окружения

Все изменённые конфигурационные файлы HTTP- и DNS-серверов скопированы в соответствующие подкаталоги провижининга виртуальной машины.

![Копирование конфигурационных файлов](image/Screenshot_15.png)

Скрипт добавлен в конфигурацию Vagrant для автоматического выполнения при развёртывании виртуальной машины.

![Изменение Vagrantfile](image/Screenshot_16.png)

# Контрольные вопросы

1. **Через какой порт по умолчанию работает Apache?**  
   Apache использует порт 80 для HTTP-соединений.

2. **Под каким пользователем запускается Apache?**  
   Процессы Apache работают от имени пользователя и группы `apache`.

3. **Где располагаются лог-файлы веб-сервера?**  
   Основные логи находятся в каталоге `/var/log/httpd/` и включают файлы `access_log` и `error_log`.

4. **Где по умолчанию содержится контент веб-серверов?**  
   Стандартным каталогом для размещения веб-контента является `/var/www/html/`.

5. **Каким образом реализуется виртуальный хостинг?**  
   Виртуальный хостинг реализуется с помощью директив `<VirtualHost>`, позволяющих обслуживать несколько доменных имён на одном IP-адресе.

# Выводы

В ходе лабораторной работы были успешно установлены и опробованы на практике основные операции по развёртыванию и настройке HTTP-сервера Apache. Освоена процедура базовой конфигурации сервера, настройки виртуального хостинга для нескольких доменов, а также автоматизации процесса с использованием инструмента Vagrant. Полученные навыки позволяют самостоятельно управлять веб-сервером в операционной системе Linux.
