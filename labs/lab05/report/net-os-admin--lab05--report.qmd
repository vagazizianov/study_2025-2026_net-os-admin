---
  title: "Лабораторная работа №5"
  author: "Газизянов Владислав Альбертович"
  subtitle: "Расширенная настройка HTTP-сервера Apache"
  license: "CC BY"
---

# Цель работы

Приобретение практических навыков по расширенному конфигурированию HTTP-сервера Apache в части безопасности и возможности использования PHP.

# Задание

1. Сгенерировать криптографический ключ и самоподписанный сертификат безопасности для перехода веб-сервера на работу через протокол HTTPS.
2. Настроить веб-сервер для работы с PHP.
3. Написать скрипт для Vagrant, фиксирующий действия по расширенной настройке HTTP-сервера.

# Выполнение лабораторной работы

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Была запущена виртуальная машина server и выполнена подготовка к настройке безопасного соединения.

![Запуск виртуальной машины](image/Screenshot_1.png)

Создан каталог для хранения криптографических ключей и сгенерирован самоподписанный сертификат с использованием OpenSSL.

![Генерация SSL сертификата](image/Screenshot_2.png)

Выполнена настройка конфигурационного файла виртуального хоста для поддержки как HTTP, так и HTTPS соединений с автоматическим перенаправлением на защищённое соединение.

![Настройка конфигурации HTTPS](image/Screenshot_3.png)

В настройки межсетевого экрана добавлено разрешение для HTTPS-трафика, после чего веб-сервер был перезапущен для применения изменений.

![Настройка firewall для HTTPS](image/Screenshot_4.png)

С виртуальной машины client проведено тестирование работы веб-сервера через HTTPS, проверено автоматическое перенаправление и просмотрены детали сертификата.

![Проверка HTTPS соединения](image/Screenshot_5.png)

## Конфигурирование HTTP-сервера для работы с PHP

Установлены пакеты, необходимые для работы PHP с веб-сервером Apache.

![Установка PHP](image/Screenshot_6.png)

В корневом каталоге веб-сервера создан тестовый PHP-файл для проверки корректности работы интерпретатора.

![Создание тестового PHP-файла](image/Screenshot_7.png)

Настроены соответствующие права доступа к файлам и восстановлены контексты безопасности SELinux.

![Настройка прав доступа](image/Screenshot_8.png)

После перезапуска веб-сервера проведена проверка отображения PHP-страницы с информацией о версии интерпретатора.

![Проверка работы PHP](image/Screenshot_9.png)

## Внесение изменений в настройки внутреннего окружения

Все изменённые конфигурационные файлы, включая SSL сертификаты и ключи, скопированы в соответствующие подкаталоги провижининга виртуальной машины.

![Копирование конфигурационных файлов](image/Screenshot_10.png)

Существующий скрипт автоматизации дополнен командами для установки PHP и настройки поддержки HTTPS.
Скрипт интегрирован в конфигурацию Vagrant для автоматического выполнения при развёртывании виртуальной машины.

![Обновление скрипта автоматизации](image/Screenshot_11.png)

# Контрольные вопросы

1. **В чём отличие HTTP от HTTPS?**  
   HTTPS является расширением HTTP с поддержкой шифрования для повышения безопасности передачи данных.

2. **Каким образом обеспечивается безопасность контента веб-сервера при работе через HTTPS?**  
   Безопасность обеспечивается за счёт использования криптографических протоколов (SSL/TLS) для шифрования данных и аутентификации сервера.

3. **Что такое сертификационный центр? Приведите пример.**  
   Сертификационный центр (CA) — организация, выпускающая и управляющая цифровыми сертификатами. Пример: Let's Encrypt, Comodo, DigiCert.

# Выводы

В ходе лабораторной работы были успешно освоены методы расширенной настройки HTTP-сервера Apache. Настроено безопасное HTTPS-соединение с использованием самоподписанного сертификата, обеспечена поддержка выполнения PHP-скриптов и автоматизирован процесс развёртывания конфигурации. Полученные навыки позволяют обеспечивать базовую безопасность веб-сервера и расширять его функциональность.
